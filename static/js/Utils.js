// Generated by CoffeeScript 1.9.1
(function() {
  this.Utils = (function() {
    Utils.utilsDOM = void 0;

    Utils.selectedID = 0;

    function Utils(utils_class, selectedID) {
      this.selectedID = selectedID != null ? selectedID : 0;
      this.utilsDOM = document.getElementsByClassName(utils_class);
      this.bindListeners();
      this.updateClasses();
    }

    Utils.prototype.bindListeners = function() {
      var child, children, dom, fn, i, j, k, len, len1, ref;
      ref = this.utilsDOM;
      for (j = 0, len = ref.length; j < len; j++) {
        dom = ref[j];
        children = dom.children;
        fn = (function(_this) {
          return function(i) {
            return child.addEventListener('click', function() {
              return _this.changeUtil(i);
            });
          };
        })(this);
        for (i = k = 0, len1 = children.length; k < len1; i = ++k) {
          child = children[i];
          fn(i);
        }
      }
    };

    Utils.prototype.changeUtil = function(i) {
      if (i !== this.selectedID) {
        this.selectedID = i;
        return this.updateClasses();
      }
    };

    Utils.prototype.updateClasses = function() {
      var child, children, dom, i, j, k, len, len1, ref;
      ref = this.utilsDOM;
      for (j = 0, len = ref.length; j < len; j++) {
        dom = ref[j];
        children = dom.children;
        for (i = k = 0, len1 = children.length; k < len1; i = ++k) {
          child = children[i];
          if (i === this.selectedID) {
            child.classList.add('selected');
            programEvents.emit('util-changed', this.selectedID, child.attributes['data-type'].nodeValue);
          } else {
            child.classList.remove('selected');
          }
        }
      }
    };

    return Utils;

  })();

}).call(this);

//# sourceMappingURL=Utils.js.map
